'use client';
import './globals.css';
// TODO : Inter なんなのか調べる
// storybook addon-coverage を入れたら、test でエラーが出るようになった。
// Inter コメントアウトしても、特に影響がなかったので一旦コメントアウト
// import { Inter } from 'next/font/google';
import { SnackbarProvider, closeSnackbar, useSnackbar } from 'notistack';
import { ThemeProvider } from '@mui/material';
import { z } from 'zod';

import { useSession } from '@/hooks/useSession';
import { theme } from '@/lib/mui';
import { useSessionSocket } from '@/hooks/useSocket';
import { useLogout } from '@/features/user/api/userLogin';
import { useCurrentUserStateUpdates } from '@/hooks/useCurrentUser';

import StyledComponentsRegistry from '../lib/registry';

// const inter = Inter({ subsets: ['latin'] });

// client sideだとエラー出るので、一旦コメントアウト
// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

export const SessionHandler = ({ children }: { children: React.ReactNode }) => {
  const { logout } = useLogout();
  const { enqueueSnackbar } = useSnackbar();

  useSession();
  useCurrentUserStateUpdates();

  useSessionSocket('error', (data) => {
    const resErrMsg = z.string().safeParse(data);
    enqueueSnackbar(resErrMsg.success ? data : 'Error');
    console.log(data);
  });

  useSessionSocket('logout', (data) => {
    // logoutと同じ処理
    console.log('logout', data);
    logout();
  });

  return <>{children}</>;
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      {/* <body className={inter.className}> */}
      <body>
        <StyledComponentsRegistry>
          <ThemeProvider theme={theme}>
            <SnackbarProvider
              maxSnack={3}
              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
              action={(snackbarId) => (
                <p onClick={() => closeSnackbar(snackbarId)}>Dismiss</p>
              )}
            >
              <SessionHandler>{children}</SessionHandler>
            </SnackbarProvider>
          </ThemeProvider>
        </StyledComponentsRegistry>
      </body>
    </html>
  );
}
